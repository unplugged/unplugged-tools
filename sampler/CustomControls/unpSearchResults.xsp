<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright 2013 Teamstudio Inc 
Licensed under the Apache License, Version 2.0 (the "License"); 
you may not use this file except in compliance with the License. You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0 
Unless required by applicable law or agreed to in writing, software distributed under the License is distributed 
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
the specific language governing permissions and limitations under the License
 -->

<xp:view xmlns:xp="http://www.ibm.com/xsp/core">
	<xp:this.data>
		<xp:dominoView var="viewList"
			viewName="#{javascript:compositeData.viewName}" keys="#{compositeData.viewsearch}"
			keysExactMatch="false">
		</xp:dominoView>
	</xp:this.data>
	<xp:this.resources>
		<xp:script src="/unp/jquery.blockUI.min.js" clientSide="true"></xp:script>
		<xp:script src="/unp/iScroll.min.js" clientSide="true"></xp:script>
		<xp:script src="/unplugged.js" clientSide="true"></xp:script>
		<xp:script src="/unpCommon.jss" clientSide="false"></xp:script>
	</xp:this.resources>
	<div id="results">
		<xp:panel tagName="div">
			<xp:this.styleClass><![CDATA[#{javascript:if(compositeData.insetData) {return "bordered";}}]]>
			</xp:this.styleClass>
			<div id="flatView">
				<ul id="flatViewRowSet" style="padding-top: 14px;">
					<li id="title">
						<xp:label id="label3">
							<xp:this.value><![CDATA[#{javascript:compositeData.title;
}]]></xp:this.value>

						</xp:label>
					</li>
					<xp:repeat id="repeat4" var="thisRowData" value="#{viewList}"
						disableOutputTag="true">
						<xp:this.rows><![CDATA[${javascript:sessionScope.rowcount = compositeData.numberofrows;
if (sessionScope.rowcount != null){
	return sessionScope.rowcount;
}else{
	return 20;
}}]]></xp:this.rows>
						<xp:panel tagName="li" id="datarow" styleClass="data-row">
							<xp:this.attrs>
								<xp:attr name="onClick">
									<xp:this.value><![CDATA[#{javascript:"openDocument('" + getDbPath() + "/" + compositeData.xpageDoc + "?action=openDocument&documentId=" + thisRowData.getDocument().getUniversalID() + "', 'content');"}]]></xp:this.value>
								</xp:attr>
							</xp:this.attrs>
							<xp:image url="/unp/right-arrow-circle.png" id="image1"
								styleClass="#{javascript:if(isEmpty(compositeData.detailColumn)){ return 'icon';} else {return 'multiLineIcon';}}">
							</xp:image>
							<xp:label id="label2"
								value="#{javascript:thisRowData.getColumnValue(compositeData.summaryColumn);}"
								styleClass="viewlistsummary">
							</xp:label>
							<div>
								<xp:label id="label1" styleClass="viewlistdetail">
									<xp:this.rendered><![CDATA[#{javascript:if(isEmpty(compositeData.detailColumn)){ return false; }
else {return true;}}]]></xp:this.rendered>
									<xp:this.value><![CDATA[#{javascript:if(isEmpty(compositeData.detailColumn)){
	return "";
}else{
  return thisRowData.getColumnValue(compositeData.detailColumn);
}}]]></xp:this.value>

								</xp:label>
							</div>
						</xp:panel>
					</xp:repeat>
				</ul>
				<div class="summaryDataRow"></div>
				<xp:div id="pullUpHolder">
					<xp:this.rendered><![CDATA[#{javascript:compositeData.refreshmethod == "pull"}]]></xp:this.rendered>
					<div id="pullUp">
						<span class="pullUpIcon"></span>
						<span class="pullUpLabel">
							Pull up to load more...
						</span>
					</div>
				</xp:div>
				<xp:div id="loadmorelink">
					<xp:this.styleClass><![CDATA[#{javascript:if (compositeData.refreshmethod != "button"){
	return "loadmorelink hidden";
}else{
	return "loadmorelink";
}}]]></xp:this.styleClass>
					<xp:button value="Load More..." id="loadmorebutton"
						styleClass="loadmorebutton">
						<xp:this.attrs>
							<xp:attr name="onclick">
								<xp:this.value><![CDATA[#{javascript:"loadmore('" + compositeData.dbName + "', '" + compositeData.viewName + "', '" + compositeData.summaryColumn + "', '" + compositeData.detailColumn + "', '" + compositeData.categoryfilter + "', '" + compositeData.xpageDoc + "', '" + compositeData.refreshmethod + "')"}]]></xp:this.value>
							</xp:attr>
						</xp:this.attrs>
					</xp:button>
				</xp:div>

			</div>
		</xp:panel>
	</div>

</xp:view>
